{"version":3,"sources":["webpack:///./src/components/sentences.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["text","leftColumns","title","dataIndex","key","rightColumns","loadedSentences","i","split","map","e","trim","filter","forEach","element","push","toString","sentence","Sentences","props","_this","_React$Component","call","this","keySet","Set","state","chosen","keys","finalMessage","person","buildFinalMessage","bind","_assertThisInitialized","addSentence","removeSentence","clearSentences","onChange","sentences","join","replace","setState","record","rowIndex","has","add","delete","index","length","splice","event","target","value","render","_this2","react_default","a","createElement","row_default","gutter","col_default","span","table_default","pagination","columns","dataSource","size","showHeader","onRow","onClick","button_default","type","block","disabled","input_default","id","TextArea","autosize","React","Component","IndexPage","layout","seo","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","loader","enqueue","createContext","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_link_default","to","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-index-js-f0826b4774379de76be8.js","sourcesContent":["// FIXME load sentences from file\n// TODO copy final sentences to clipboard\n// TODO drag sentences to sort them\n// TODO search box for available sentences\n// TODO remove docs directory\nimport React from \"react\"\nimport { Button, Table, Row, Col, Input } from \"antd\"\nconst leftColumns = [\n  {\n    title: \"Available sentences\",\n    dataIndex: \"sentence\",\n    key: \"sentence\",\n  },\n]\nconst rightColumns = [\n  {\n    title: \"Chosen sentences\",\n    dataIndex: \"sentence\",\n    key: \"sentence\",\n  },\n]\n\nconst defaultSentences = `\nHi, {person},\nHello, {person},\nDear {person},\n\nThanks.\nSorry.\n\nBest regards.\nHave a nice weekend and best regards.\nHave a nice day and best regards.\n`\n\nconst parseSentences = text =>\n  text\n    .split(\"\\n\")\n    .map(e => e.trim())\n    .filter(e => e !== \"\")\n\nconst loadedSentences = []\nvar i = 0\nparseSentences(defaultSentences).forEach(element => {\n  ++i\n  loadedSentences.push({\n    key: i.toString(),\n    sentence: element,\n  })\n})\n\nclass Sentences extends React.Component {\n  constructor(props) {\n    super(props)\n    const keySet = new Set()\n    this.state = { chosen: [], keys: keySet, finalMessage: \"\", person: \"\" }\n\n    // This binding is necessary to make `this` work in the callback\n    this.buildFinalMessage = this.buildFinalMessage.bind(this)\n    this.addSentence = this.addSentence.bind(this)\n    this.removeSentence = this.removeSentence.bind(this)\n    this.clearSentences = this.clearSentences.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  buildFinalMessage(person) {\n    var sentences = []\n    this.state.chosen.forEach(element => {\n      sentences.push(element.sentence)\n    })\n\n    var finalMessage = sentences.join(\"\\n\").replace(/\\{person\\}/g, person)\n    this.setState({ finalMessage: finalMessage })\n  }\n\n  addSentence(record, rowIndex) {\n    if (this.state.keys.has(record.key)) {\n      return\n    }\n    this.state.keys.add(record.key)\n    this.state.chosen.push(record)\n\n    this.buildFinalMessage(this.state.person)\n    this.setState({ keys: this.state.keys, chosen: this.state.chosen })\n  }\n\n  removeSentence(record, rowIndex) {\n    this.state.keys.delete(record.key)\n    for (let index = 0; index < this.state.chosen.length; index++) {\n      const element = this.state.chosen[index]\n      if (element === record) {\n        this.state.chosen.splice(index, 1)\n      }\n    }\n\n    this.buildFinalMessage(this.state.person)\n    this.setState({ keys: this.state.keys, chosen: this.state.chosen })\n  }\n\n  clearSentences() {\n    this.setState({ chosen: [], keys: new Set(), finalMessage: [] })\n  }\n\n  onChange(event) {\n    this.setState({ person: event.target.value })\n    this.buildFinalMessage(event.target.value)\n  }\n\n  render() {\n    return (\n      <Row gutter={16}>\n        <Col span={8}>\n          <Table\n            pagination={false}\n            columns={leftColumns}\n            dataSource={loadedSentences}\n            size=\"small\"\n            showHeader={true}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: () => {\n                  this.addSentence(record, rowIndex)\n                },\n              }\n            }}\n          />\n        </Col>\n        <Col span={8}>\n          <Table\n            pagination={false}\n            columns={rightColumns}\n            dataSource={this.state.chosen}\n            size=\"small\"\n            showHeader={true}\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: () => {\n                  this.removeSentence(record, rowIndex)\n                },\n              }\n            }}\n          />\n        </Col>\n        <Col span={8}>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Button type=\"primary\" block disabled={true}>\n                Copy to clipboard\n              </Button>\n            </Col>\n            <Col span={12}>\n              <Button type=\"danger\" block onClick={this.clearSentences}>\n                Clear all sentences\n              </Button>\n            </Col>\n          </Row>\n          <p></p>\n          <p></p>\n          <span>Person:</span>\n          <Row>\n            <Input id=\"person\" onChange={this.onChange} />\n          </Row>\n          <p></p>\n          <span>Final message:</span>\n          <Row>\n            <Input.TextArea autosize={true} value={this.state.finalMessage} />\n          </Row>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Sentences\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sentences from \"../components/sentences\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Sentences />\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 1960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}