{"version":3,"sources":["webpack:///./src/components/upload-sentence-file.js","webpack:///./src/components/chosen-sentences.js","webpack:///./src/components/sentences.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["UploadSentenceFile","state","fileList","content","handleChange","info","_toConsumableArray","map","file","reader","FileReader","onload","e","target","result","_this","props","onFileUploaded","readAsText","originFileObj","setState","render","onChange","this","multiple","showUploadList","react_default","a","createElement","upload_default","Object","assign","button_default","title","icon_default","type","React","Component","ChosenSentences","_React$Component","call","items","data","setNewOrder","removeSentence","onDragEnd","bind","_assertThisInitialized","destination","list","startIndex","endIndex","Array","from","removed","splice","reorder","source","index","_this2","Paper","Typography","variant","react_beautiful_dnd_esm","droppableId","provided","snapshot","List","dense","droppableProps","ref","innerRef","style","isDraggingOver","background","padding","record","key","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","margin","ListItem","ListItemText","primary","sentence","ListItemSecondaryAction","onClick","event","IconButton","edge","aria-label","Delete_default","Divider","placeholder","defaultSentences","Sentences","available","pushSentenceObjects","chosen","keys","Set","finalMessage","person","clearSentences","sentences_assertThisInitialized","sentencesArray","text","targetArray","split","trim","replace","filter","forEach","element","push","toString","buildFinalMessage","sentences","join","addSentence","some","length","textContent","copyToClipboard","document","querySelector","select","execCommand","message_default","success","err","console","log","error","Grid","container","spacing","item","xs","dist_default","columns","field","options","header","pageSize","paging","onRowClick","rowData","chosen_sentences","upload_sentence_file","block","disabled","input_default","id","value","TextArea","autosize","IndexPage","layout","seo","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps","loader","enqueue","createContext","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","Header","siteTitle","classes","AppBar","position","className","marginBottom","Toolbar","gatsby_link_default","to","color","textDecoration","Layout","children","_856328897","Fragment","rel","href","maxWidth","paddingTop","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-84272b15c7ffdd8119cd.js","sourcesContent":["import React from \"react\"\nimport { Upload, Button, Icon } from \"antd\"\n\nclass UploadSentenceFile extends React.Component {\n  state = {\n    fileList: [],\n    content: \"\",\n  }\n\n  handleChange = info => {\n    let fileList = [...info.fileList]\n    let content = \"\"\n\n    fileList = fileList.map(file => {\n      var reader = new FileReader()\n      reader.onload = e => {\n        content = e.target.result\n        this.props.onFileUploaded(content)\n      }\n      reader.readAsText(file.originFileObj)\n\n      return file\n    })\n\n    this.setState({ fileList, content })\n  }\n\n  render() {\n    const props = {\n      onChange: this.handleChange,\n      multiple: false,\n      showUploadList: false,\n    }\n    return (\n      <Upload {...props} fileList={this.state.fileList}>\n        <Button title=\"Upload a file with sentences\">\n          <Icon type=\"upload\" /> Upload\n        </Button>\n      </Upload>\n    )\n  }\n}\nexport default UploadSentenceFile\n","import React from \"react\"\n// import { makeStyles } from \"@material-ui/core/styles\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { Divider, Paper } from \"@material-ui/core\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\n\n// const useStyles = makeStyles(theme => ({\n//   list: {\n//     backgroundColor: theme.palette.background.paper,\n//   },\n//   title: {\n//     padding: theme.spacing(2, 2, 0),\n//     margin: theme.spacing(0, 3, 0),\n//   },\n//   oneitem: {\n//     padding: theme.spacing(0, 0),\n//     margin: theme.spacing(0, 2),\n//   },\n// }))\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nconst grid = 0\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"white\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n})\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"white\",\n  padding: grid,\n})\n\n// TODO convert this to a hook and use the styles above\nclass ChosenSentences extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: props.data,\n      setNewOrder: props.setNewOrder,\n    }\n    this.removeSentence = props.removeSentence\n\n    this.onDragEnd = this.onDragEnd.bind(this)\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    )\n\n    this.setState({\n      items,\n    })\n    this.state.setNewOrder(items)\n  }\n\n  render() {\n    return (\n      <Paper>\n        <Typography\n          variant=\"h6\"\n          // className={classes.title}\n        >\n          Chosen sentences\n        </Typography>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <List\n                // className={classes.list}\n                dense={true}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {this.state.items.map((record, index) => (\n                  <Draggable\n                    key={record.key}\n                    draggableId={record.key}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        <ListItem\n                          key={record.key}\n                          // className={classes.oneitem}\n                        >\n                          <ListItemText\n                            key={record.key}\n                            primary={record.sentence}\n                          />\n                          <ListItemSecondaryAction\n                            key={record.key}\n                            title=\"Remove sentence\"\n                            onClick={event => {\n                              this.removeSentence(record)\n                            }}\n                          >\n                            <IconButton\n                              key={record.key}\n                              edge=\"end\"\n                              aria-label=\"delete\"\n                            >\n                              <DeleteIcon key={record.key} />\n                            </IconButton>\n                          </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider variant=\"middle\" />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </List>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Paper>\n    )\n  }\n}\n\nexport default ChosenSentences\n","import React from \"react\"\nimport { Button, Input, message } from \"antd\"\nimport UploadSentenceFile from \"./upload-sentence-file\"\nimport MaterialTable from \"material-table\"\nimport ChosenSentences from \"./chosen-sentences\"\nimport Grid from \"@material-ui/core/Grid\"\n\nconst defaultSentences = `\nHi, {person},|\nHello, {person},|\nDear {person},|\nThanks.\nSorry.\n|Best regards.|Me\n|Have a nice weekend and best regards.|Me\n|Have a nice day and best regards.|Me\n`\n\nconst cleanSentences = text =>\n  text\n    .split(\"\\n\")\n    .map(e => e.trim().replace(/\\|/g, \"¶\"))\n    .filter(e => e !== \"\")\n\nclass Sentences extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      available: this.pushSentenceObjects(defaultSentences),\n      chosen: [],\n      keys: new Set(),\n      finalMessage: \"\",\n      person: \"\",\n    }\n\n    // Some bindings are necessary to make `this` work in the callback\n    this.clearSentences = this.clearSentences.bind(this)\n    this.onFileUploaded = this.onFileUploaded.bind(this)\n    this.removeSentence = this.removeSentence.bind(this)\n    this.setNewOrder = this.setNewOrder.bind(this)\n  }\n\n  pushSentenceObjects(sentencesArray) {\n    var index = 0,\n      targetArray = []\n    cleanSentences(sentencesArray).forEach(element => {\n      targetArray.push({\n        key: index.toString(),\n        sentence: element,\n      })\n      ++index\n    })\n    return targetArray\n  }\n\n  buildFinalMessage() {\n    var sentences = []\n    this.state.chosen.forEach(element => {\n      sentences.push(element.sentence)\n    })\n\n    var finalMessage = sentences\n      .join(\"\\n\")\n      .replace(/¶/g, \"\\n\")\n      .replace(/\\{person\\}/g, this.state.person)\n    return finalMessage\n  }\n\n  addSentence(record) {\n    const chosen = this.state.chosen\n    if (chosen.some(e => e.key === record.key)) {\n      return\n    }\n    chosen.push(record)\n    this.setState({ chosen })\n  }\n\n  removeSentence(record) {\n    const chosen = this.state.chosen\n    for (let index = 0; index < chosen.length; index++) {\n      const element = chosen[index]\n      if (element === record) {\n        chosen.splice(index, 1)\n      }\n    }\n\n    this.setState({ chosen })\n  }\n\n  setNewOrder(chosen) {\n    this.setState({ chosen })\n  }\n\n  clearSentences() {\n    this.setState({ chosen: [], keys: new Set(), finalMessage: [] })\n  }\n\n  onFileUploaded(textContent) {\n    this.clearSentences()\n    let available = this.pushSentenceObjects(textContent)\n    this.setState({ available })\n  }\n\n  copyToClipboard() {\n    var copyTextarea = document.querySelector(\"#finalMessage\")\n    copyTextarea.select()\n\n    try {\n      document.execCommand(\"copy\")\n      message.success(\"Final message copied to the clipboard.\")\n    } catch (err) {\n      console.log(err)\n      message.error(\n        \"Oops, unable to copy for some reason. Check the console log.\"\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <MaterialTable\n            title=\"Available sentences\"\n            columns={[{ field: \"sentence\" }]}\n            data={this.state.available}\n            // https://material-table.com/#/docs/all-props\n            options={{\n              padding: \"dense\",\n              header: false,\n              pageSize: this.state.available.length,\n              paging: false,\n            }}\n            onRowClick={(event, rowData) => {\n              this.addSentence(rowData)\n            }}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <ChosenSentences\n            state={this.state}\n            data={this.state.chosen}\n            removeSentence={this.removeSentence}\n            setNewOrder={this.setNewOrder}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <UploadSentenceFile onFileUploaded={this.onFileUploaded} />\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                type=\"primary\"\n                block\n                title=\"Copy the final message to the clipboard\"\n                onClick={this.copyToClipboard}\n                disabled={!this.state.chosen.length}\n              >\n                Copy\n              </Button>\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                type=\"danger\"\n                block\n                onClick={this.clearSentences}\n                title=\"Clear chosen sentences\"\n                disabled={!this.state.chosen.length}\n              >\n                Clear\n              </Button>\n            </Grid>\n          </Grid>\n          <p></p>\n          <Grid item xs={12}>\n            <span>Person:</span>\n            <Input\n              id=\"person\"\n              onChange={event => {\n                this.setState({ person: event.target.value })\n              }}\n            />\n          </Grid>\n          <p></p>\n          <Grid item xs={12}>\n            <span>Final message:</span>\n            <Input.TextArea\n              id=\"finalMessage\"\n              autosize={true}\n              value={this.buildFinalMessage()}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default Sentences\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sentences from \"../components/sentences\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Sentences />\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst Header = ({ siteTitle }) => {\n  const classes = useStyles()\n  return (\n    <AppBar\n      position=\"static\"\n      className={classes.root}\n      style={{\n        background: `rebeccapurple`,\n        marginBottom: `0.93rem`,\n      }}\n    >\n      <Toolbar variant=\"dense\">\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          <Typography variant=\"h6\" color=\"inherit\">\n            {siteTitle}\n          </Typography>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  )\n}\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 1960,\n          padding: `0px 1.0875rem 0.93rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}